###--- Global options --- ###
# Don't wait for keystrokes after escape
set-option -sg escape-time 0
set -s escape-time 0

# Ensure focus events enabled for nvim/tmux
set-option -g focus-events on

# Ensure that tmux does not emit any beep sounds
# https://stackoverflow.com/questions/18843075/tmux-disable-beep-on-attach-detach
set -g bell-action any
set -g visual-bell off

# Reset Prefix
set -g prefix C-a
bind a send-prefix # for nested tmux sessions

# allow scrolling with mouse-wheel/pad
set -g mouse on

# basic settings
set -g allow-rename off # don't auto change my window names
set-window-option -g automatic-rename off # don't auto rename
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set  -g default-terminal "tmux-256color"
set -ag terminal-overrides ",alacritty:RGB"
set -sa terminal-overrides ",alacritty:RGB"
set -ag terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[ q'

###--- Status Bar ---###
set -g status-justify left
set -g status-right-length 60
set -g status-interval 5

# Follow i3 config for active/inactive colours
set -g pane-active-border-style bg=0,fg=colour13
set -g pane-border-style bg=0,fg=colour2

# don't invert colours for active windows by default (ill do this myself)
# https://unix.stackexchange.com/questions/120857/tmux-monitor-activity-change-highlight-color
set -g status-style fg=colour2,bg=colour0,none
# set-window-option -g window-status-style fg=colour2,bg=colour0,none
# set-window-option -g window-status-current-style fg=colour2,bg=colour0,none
set-window-option -g window-status-activity none
set -g window-status-format "#[fg=colour2,bg=colour0,nobold]<#I:#W>"
set -g window-status-current-format "#[fg=colour0,bg=colour13,bold]<#I:#W>"
set -g status-right "#[fg=colour2,bg=colour0,nobold]#(bar #{client_width}) %a %d %l:%M %p "
set -g status-left ""

###--- Unbindings ---###
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split

###--- Bindings ---###
bind r source-file ~/.tmux.conf \; display-message ".tmux.conf reloaded"

# Avoid confirmations when killing
bind Q kill-session
bind X kill-window
bind x kill-pane

#bind prefix + C-c to clear the terminal, since C-l is used for movement
bind C-c send-keys 'C-l'

# Windows
set-window-option -g window-status-current-style fg=white,reverse,bg=red
bind n next-window
bind N previous-window
bind C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"

# Panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind BSpace split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind Space list-panes
bind Enter break-pane

# Resizing
bind C-h resize-pane -L 5
bind C-j resize-pane -D 5
bind C-k resize-pane -U 5
bind C-l resize-pane -R 5

# Selection and copy paste
bind v copy-mode
bind p paste-buffer

bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'V' send -X select-line
bind -T copy-mode-vi 'r' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Layouts
bind o next-layout
bind C-'\' select-layout "even-horizontal"
bind C-r rotate-window
# Can't get this fucker to cooperate.
# May however be terminal related issue.
# unbind C-BSpace
bind C-BSpace select-layout "even-vertical"

###--- Smart pane switching with awareness of Vim splits ---###
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'

bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \ "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Ensure window selection also works with keyboaord
bind-key -n KP0 select-window -t :0
bind-key -n KP1 select-window -t :1
bind-key -n KP2 select-window -t :2
bind-key -n KP3 select-window -t :3
bind-key -n KP4 select-window -t :4
bind-key -n KP5 select-window -t :5
bind-key -n KP6 select-window -t :6
bind-key -n KP7 select-window -t :7
bind-key -n KP8 select-window -t :8
bind-key -n KP9 select-window -t :9
